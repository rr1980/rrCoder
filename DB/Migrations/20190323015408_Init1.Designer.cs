// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DB.Migrations
{
    [DbContext(typeof(RRCoderDBContext))]
    [Migration("20190323015408_Init1")]
    partial class Init1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("rrCoder")
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Aenderungen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BemerkungId");

                    b.Property<int?>("CodeContentId");

                    b.Property<DateTime?>("Datum");

                    b.Property<int?>("Type");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("BemerkungId");

                    b.HasIndex("CodeContentId");

                    b.HasIndex("UserId");

                    b.ToTable("Aenderungen");
                });

            modelBuilder.Entity("Entities.Bemerkung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Betreff");

                    b.Property<int?>("CodeContentId");

                    b.Property<string>("Text");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CodeContentId");

                    b.HasIndex("UserId");

                    b.ToTable("Bemerkung");
                });

            modelBuilder.Entity("Entities.Benutzer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("Role");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Entities.CodeContent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Betreff");

                    b.Property<string>("Text");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("CodeContent");
                });

            modelBuilder.Entity("Entities.Aenderungen", b =>
                {
                    b.HasOne("Entities.Bemerkung", "Bemerkung")
                        .WithMany("Aenderungen")
                        .HasForeignKey("BemerkungId");

                    b.HasOne("Entities.CodeContent", "CodeContent")
                        .WithMany("Aenderungen")
                        .HasForeignKey("CodeContentId");

                    b.HasOne("Entities.Benutzer", "User")
                        .WithMany("AusgefuehrteAenderungen")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Entities.Bemerkung", b =>
                {
                    b.HasOne("Entities.CodeContent", "CodeContent")
                        .WithMany("Bemerkungen")
                        .HasForeignKey("CodeContentId");

                    b.HasOne("Entities.Benutzer", "User")
                        .WithMany("Bemerkungen")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Entities.CodeContent", b =>
                {
                    b.HasOne("Entities.Benutzer", "User")
                        .WithMany("CodeContent")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
